generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ProductStatus {
  ACTIVE
  INACTIVE
}

enum PaymentStatus {
  PENDING
  PAID
  COMPLETED
}

model User {
  id                String   @id @default(uuid())
  fullname          String
  email             String   @unique
  mobile            String?
  password          String
  resetTokenVersion Int      @default(0)
  role              Role     @default(USER)
  stripeCustomerId  String?  
  orders            Order[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Product {
  id         String           @id @default(uuid())
  title      String
  status     ProductStatus    @default(ACTIVE)
  variants   ProductVariant[]
  orderItems OrderItem[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

model ProductVariant {
  id          String      @id @default(uuid())
  product     Product     @relation(fields: [productId], references: [id])
  productId   String
  colorName   String
  colorCode   String
  size        String
  stock       Int         @default(0)
  price       Float
  image       String
  isDeleted   Boolean     @default(false)
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([productId, colorName, size])
}

model Order {
  id               String          @id @default(uuid())
  user             User            @relation(fields: [userId], references: [id])
  userId           String
  total            Float
  tax              Float           @default(0)
  paymentStatus    PaymentStatus   @default(PENDING)
  stripeSessionId  String?        
  stripeCustomerId String?         
  items            OrderItem[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model OrderItem {
  id          String          @id @default(uuid())
  order       Order           @relation(fields: [orderId], references: [id])
  orderId     String
  product     Product         @relation(fields: [productId], references: [id])
  productId   String
  variant     ProductVariant? @relation(fields: [variantId], references: [id])
  variantId   String?
  qty         Int
  price       Float
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now())
}

model OrderSummary {
  id           Int      @id @default(autoincrement())
  totalOrders  Int
  totalUnits   Int
  totalAmount  Float
  lastUpdated  DateTime @default(now())
}
